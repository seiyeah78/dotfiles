# プレフィックスは tに変更
set-option -g prefix C-t
bind C-t send-prefix

# rで設定ファイルをリロードする
bind r source-file ~/.tmux.conf \; display "Reloaded!"

#-r:プレフィックスを一度入力するとrepeat-timeの間は入力しなくて良くなる
# default 500ms
set -g repeat-time 800

# ペイン番号の表示時間を延長。デフォルト500ms
set -g display-panes-time 3000

# 現在のペインの最大化トグル
# bind F resize-pane -Z

# 256色端末を使用する
set -g default-terminal screen-256color
set -ga terminal-overrides ",xterm-256color:Tc"

# Allow dim-ed colours in Terminal.app on MacOS
set -sa terminal-overrides ',*:dim=\E[2m'

# Allow strike-through in Tmux
set -sa terminal-overrides ',*:smxx=\E[9m'

# Allow italics in Tmux
set -sa terminal-overrides ',*:sitm=\E[3m'

# ステータスバーの色を設定する
set -g status-fg colour254
set -g status-bg black

# ウィンドウリストの色を設定する
set -g window-status-style fg="colour249","default"

# アクティブなウィンドウを目立たせる
# http://www.deanbodenham.com/learn/tmux-pane-colours.html
set -g window-active-style 'fg=colour253,bg=terminal'
set -g window-style        'fg=colour247,bg=colour235'
# set -g window-style 'fg=default,bg=default'
# set -g window-active-style 'fg=default,bg=default'

#-------------------------------------------------------#

# 新規windowでcurrent_pathにする
bind c new-window -c "#{pane_current_path}"
# | でペインを縦に分割する
bind | split-window -h -c "#{pane_current_path}"\; select-layout even-horizontal
# - でペインを横に分割する
bind - split-window -v -c "#{pane_current_path}"\; select-layout even-vertical
# 既存のsplit系のコマンドで現在のディレクトリ位置を保持
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# 横方向に均一に並べる
bind ` select-layout even-horizontal
# 縦方向に均一に並べる
bind @ select-layout even-vertical
# T でペインをタイル状に整形する
bind T select-layout tiled

bind C-p previous-window
bind C-n next-window

# ウィンドウのインデックスを1から始める
set -g base-index 1
# インデックスを常に詰める
set -g renumber-windows on

bind 0 run-shell "tmux split-window -p 40 'zsh -ic ftpane';"

# Vimのキーバインドでペインを移動する
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind C-h select-pane -L
bind C-j select-pane -D
bind C-k select-pane -U
bind C-l select-pane -R

# サイズ変更
bind -r left resize-pane  -L
bind -r down resize-pane  -D
bind -r up   resize-pane  -U
bind -r right resize-pane -R

# ペインのサイズを大きいものと小さいものに分割し、現在のペインを大きいものと入れ替え
bind H run-shell "$HOME/dotfiles/tmux/layout.sh main_vertical_left"
bind L run-shell "$HOME/dotfiles/tmux/layout.sh main_vertical_right"
bind K select-layout main-horizontal \; swap-pane -s : -t 0 \; select-pane -t 0 \;\
       run-shell "echo \"$(tmux display-message -p '#{window_height}') / 10 * 7.5\" | bc -l | awk '{printf(\"%d\",$0 + 0.5)}' | xargs tmux resize-pane -y"


# ペインのSyncをトグルできるようにする
bind C-i set-window-option synchronize-panes

# コピーモードを設定する
### viのキーバインドを使用する
setw -g mode-keys vi

bind-key v copy-mode \; display "Copy mode!"
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"

#unbind -T copy-mode-vi send-key -X Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"

# Esc キーでコピーの反転を解除（コピーモードは抜けない）
bind-key -T copy-mode-vi Escape send-keys -X clear-selection

# Ctrl-c キーでコピーの反転を解除し、コピーモードから抜ける
bind-key -T copy-mode-vi C-c send-keys -X cancel

# コピーモード中vで選択開始
bind-key -T copy-mode-vi v send-keys -X begin-selection
# コピーモード中（Prefix+v 後）C-v で矩形選択開始
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
# 1行選択
bind-key -T copy-mode-vi V send-keys -X select-line

# Vi モード中に Ctrl-a で行頭に（Emacs ライク）
bind-key -T copy-mode-vi C-a send-keys -X start-of-line
# Vi モード中に Ctrl-e で行末に（Emacs ライク）
bind-key -T copy-mode-vi C-e send-keys -X end-of-line

# 単語の最初の1文字に移動
bind-key -T copy-mode-vi w send-keys -X next-word
# 単語の最後の1文字に移動
bind-key -T copy-mode-vi e send-keys -X next-word-end
# w の逆の動き back
bind-key -T copy-mode-vi b send-keys -X previous-word

# 画面上に映る最上行に移動
bind-key -T copy-mode-vi g send-keys -X top-line
# 画面上に映る最下行に移動
bind-key -T copy-mode-vi G send-keys -X bottom-line

# 前方検索
bind-key -T copy-mode-vi / command-prompt -p "Search Down:" "send -X search-forward \"%%%\""
# 後方検索
bind-key -T copy-mode-vi ? command-prompt -p "Search Up:" "send -X search-backward \"%%%\""

# ページスクロール
bind-key -T copy-mode-vi C-n send-keys -X page-up
bind-key -T copy-mode-vi C-p send-keys -X page-down
# ページ送り
bind-key -T copy-mode-vi C-u send-keys -X scroll-up
bind-key -T copy-mode-vi C-d send-keys -X scroll-down

## ステータスバーを設定する
source-file "$HOME/dotfiles/tmux/statusline.conf"
# https://github.com/tmux-plugins/vim-tmux-focus-events
set -g focus-events on

# plugin
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'junegunn/tmux-fzf-url'

# マウスモード
set -g mouse on
set -g @scroll-speed-num-lines-per-scroll 3
set -g @scroll-down-exit-copy-mode "on"
set -g @scroll-in-moused-over-pane "off"

# 自動保存の間隔を短くする(分)
set -g @continuum-save-interval '15'
# Vimのセッションを保存する
set -g @resurrect-strategy-vim 'session'
# ペインのコンテンツを復元する
#set -g @resurrect-capture-pane-contents 'on'
# tmux起動時に自動的に復元する
#set -g @continuum-restore 'on'
# 復元するプログラムを追加
# https://github.com/tmux-plugins/tmux-resurrect/blob/master/docs/restoring_programs.md
set -g @resurrect-processes 'vim vi nvim pry ssh irb git docker docker-comose fig tig "~rails server" "~rails console" "~rails c" "~bundle exec"'

set -g focus-events on

run '~/.tmux/plugins/tpm/tpm'

# https://github.com/tmux/tmux/issues/353
set -s escape-time 10
