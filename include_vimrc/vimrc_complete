"  Disable AutoComplPop.(標準の補完を無効にする)
let g:acp_enableAtStartup = 0

let g:dicts_dir = $HOME . '/.vim/dicts'
let g:deoplete#enable_at_startup = 1
let g:deoplete#auto_complete_delay = 0

" Use smartcase.
let g:deoplete#enable_smart_case = 1
" シンタックスをキャッシュするときの最小文字長
let g:deoplete#sources#syntax#min_keyword_length = 3
" ポップアップメニューで表示される候補の数
let g:deoplete#max_list = 100
" Define keyword.
if !exists('g:deoplete#keyword_patterns')
  let g:deoplete#keyword_patterns = {}
endif
let g:deoplete#keyword_patterns['default'] = '\h\w*'
" deopleteを自動的にロックするバッファ名のパターン
let g:deoplete#lock_buffer_name_pattern = '\*ku\*'

if isdirectory(g:dicts_dir)
  let g:deoplete#sources#dictionary#dictionaries = {
        \ 'default' : '',
        \ 'ruby' : g:dicts_dir . '/ruby.dict',
        \ 'vimshell' : g:dicts_dir . '/.vimshell_hist',
        \ }
endif

" Plugin key-mappings.
" 共通する部分まで一気に補完する
inoremap <expr><C-l> deoplete#complete_common_string()

inoremap <silent><expr><C-Space> deoplete#mappings#manual_complete()
imap <silent><C-@> <C-Space>

" Recommended key-mappings.
" <CR>: close popup and save indent.
function! s:my_cr_function()
  " 補完が表示されているときは補完の確定、そうでない場合は改行
  return (pumvisible() ? deoplete#close_popup() : "\<CR>\<C-R>=AutoPairsReturn()\<CR>\<C-R>=\<C-h>")
endfunction

inoremap <silent><CR> <C-R>=<SID>my_cr_function()<CR>

if has('conceal')
  set conceallevel=2 concealcursor=niv
endif

" <C-h>, <BS>: close popup and delete backword char.
inoremap <expr><C-h> deoplete#mappings#smart_close_popup()."\<C-h>"
inoremap <expr><BS> deoplete#mappings#smart_close_popup()."\<C-h>"
" Close popup by ESC.方向キーがABCDになるためコメントアウト
" inoremap <expr><ESC> pumvisible() ? "\<C-e>" : "\<ESC>"

let g:rubycomplete_buffer_loading = 1
let g:rubycomplete_classes_in_global = 1

call deoplete#custom#source('ultisnips', 'matchers', ['matcher_fuzzy'])
"exclude complete source
call deoplete#custom#option('ignore_sources', {'_': ['tag']})

function! Multiple_cursors_before()
  let b:deoplete_disable_auto_complete = 1
endfunction

function! Multiple_cursors_after()
  let b:deoplete_disable_auto_complete = 0
endfunction

"=========LnguageClient==========
let g:LanguageClient_serverCommands = {
      \ 'vue': ['vls'],
      \ 'ruby': ['solargraph', 'stdio'],
      \}
let g:LanguageClient_autoStart = 1
let g:LanguageClient_loggingFile = '/tmp/LanguageClient.log'
let g:LanguageClient_loggingLevel = 'ERROR'
let g:LanguageClient_serverStderr = '/tmp/LanguageServer.log'
