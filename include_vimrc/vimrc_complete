"  Disable AutoComplPop.(標準の補完を無効にする)
let g:acp_enableAtStartup = 0

let g:dicts_dir = $HOME . '/.vim/dicts'
let g:pymode_python = 'python3'
let g:deoplete#enable_at_startup = 1
" Use smartcase.
let g:deoplete#enable_smart_case = 1
" シンタックスをキャッシュするときの最小文字長
let g:deoplete#sources#syntax#min_keyword_length = 3
" ポップアップメニューで表示される候補の数
let g:deoplete#max_list = 20
"   " Define keyword.
if !exists('g:deoplete#keyword_patterns')
  let g:deoplete#keyword_patterns = {}
endif
let g:deoplete#keyword_patterns['default'] = '\h\w*'
" deopleteを自動的にロックするバッファ名のパターン
let g:deoplete#lock_buffer_name_pattern = '\*ku\*'

if isdirectory(g:dicts_dir)
  let g:deoplete#sources#dictionary#dictionaries = {
        \ 'default' : '',
        \ 'ruby' : g:dicts_dir . '/ruby.dict',
        \ 'vimshell' : g:dicts_dir . '/.vimshell_hist',
        \ 'scheme' : g:dicts_dir.'/.gosh_completions'
        \ }
endif

" Plugin key-mappings.
" 共通する部分まで一気に補完する
inoremap <expr><C-l> deoplete#complete_common_string()

inoremap <silent><expr><C-Space> deoplete#mappings#manual_complete()
imap <silent><C-@> <C-Space>

" Recommended key-mappings.
" <CR>: close popup and save indent.
inoremap <silent><CR> <C-r>=<SID>my_cr_function()<CR>
function! s:my_cr_function()
  "return (pumvisible() ? "\<C-y>" : "" ) . "\<CR>"
  " For no inserting <CR> key.
  " 補完が表示されているときは補完の確定、そうでない場合は改行
  return pumvisible() ? "\<C-y>" : "\<CR>"
endfunction

imap <C-k> <Plug>(neosnippet_expand_or_jump)
smap <C-k> <Plug>(neosnippet_expand_or_jump)
xmap <C-k> <Plug>(neosnippet_expand_target)

function! s:neosnippet_complete()
  if pumvisible()
    return "\<C-n>"
  else
    if neosnippet#expandable_or_jumpable()
      return "\<Plug>(neosnippet_expand_or_jump)"
    endif
    return "\<TAB>"
  endif
endfunction

" <TAB>: completion.
imap <expr><TAB> <SID>neosnippet_complete()

if has('conceal')
  set conceallevel=2 concealcursor=niv
endif

" <C-h>, <BS>: close popup and delete backword char.
inoremap <expr><C-h> deoplete#mappings#smart_close_popup()."\<C-h>"
inoremap <expr><BS> deoplete#mappings#smart_close_popup()."\<C-h>"
" Close popup by ESC.方向キーがABCDになるためコメントアウト
" inoremap <expr><ESC> pumvisible() ? "\<C-e>" : "\<ESC>"
" AutoComplPop like behavior.
" let g:deoplete#enable_auto_select = 1
